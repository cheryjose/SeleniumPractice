'------------------------------------------------------------------------------
'  <auto-generated>
'      This code was generated by coded UI test builder.
'      Version: 10.0.0.0
'
'      Changes to this file may cause incorrect behavior and will be lost if
'      the code is regenerated.
'  </auto-generated>
' ------------------------------------------------------------------------------

Imports System
Imports System.CodeDom.Compiler
Imports System.Collections.Generic
Imports System.Drawing
Imports System.Text.RegularExpressions
Imports System.Windows.Input
Imports Microsoft.VisualStudio.TestTools.UITest.Extension
Imports Microsoft.VisualStudio.TestTools.UITesting
Imports Microsoft.VisualStudio.TestTools.UITesting.WinControls
Imports Microsoft.VisualStudio.TestTools.UnitTesting
Imports Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard
Imports Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse
Imports MouseButtons = System.Windows.Forms.MouseButtons

Namespace TestProject1
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Partial Public Class UIMap
        
        '''<summary>
        '''RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        '''</summary>
        Public Sub RecordedMethod1()
            Dim uINewupdatesareavailabButton As WinButton = Me.UINotificationAreaWindow.UINotificationAreaToolBar.UINewupdatesareavailabButton
            Dim uITeamFoundationBuildNButton As WinButton = Me.UINotificationAreaWindow.UINotificationAreaToolBar.UITeamFoundationBuildNButton
            Dim uIµTorrent31200downloaButton As WinButton = Me.UINotificationAreaWindow.UINotificationAreaToolBar.UIµTorrent31200downloaButton
            Dim uIComputerstatusProtecButton As WinButton = Me.UINotificationAreaWindow.UINotificationAreaToolBar.UIComputerstatusProtecButton
            Dim uIDellTouchpadButton As WinButton = Me.UINotificationAreaWindow.UINotificationAreaToolBar.UIDellTouchpadButton
            Dim uIMagicISOVirtualCDDVDButton As WinButton = Me.UINotificationAreaWindow.UINotificationAreaToolBar.UIMagicISOVirtualCDDVDButton
            Dim uIItem58min20remainingButton As WinButton = Me.UISystemControlAreaWindow.UISystemControlAreaToolBar.UIItem58min20remainingButton
            Dim uICurrentlyconnectedtoButton As WinButton = Me.UISystemControlAreaWindow.UISystemControlAreaToolBar.UICurrentlyconnectedtoButton
            Dim uIVolumeButton As WinButton = Me.UISystemControlAreaWindow.UISystemControlAreaToolBar.UIVolumeButton

            'Double-Click 'New updates are available' button
            Mouse.DoubleClick(uINewupdatesareavailabButton, New Point(9, 4))

            'Double-Click 'Team Foundation Build Notification' button
            Mouse.DoubleClick(uITeamFoundationBuildNButton, New Point(12, 11))

            'Double-Click 'µTorrent 3.1.20(0) downloading, 0(0) seeding0.0 kB...' button
            Mouse.DoubleClick(uIµTorrent31200downloaButton, New Point(11, 13))

            'Double-Click 'Computer status - Protected' button
            Mouse.DoubleClick(uIComputerstatusProtecButton, New Point(6, 12))

            'Double-Click 'Dell Touchpad' button
            Mouse.DoubleClick(uIDellTouchpadButton, New Point(5, 10))

            'Double-Click 'MagicISO Virtual CD/DVD Manager' button
            Mouse.DoubleClick(uIMagicISOVirtualCDDVDButton, New Point(9, 8))

            'Double-Click '58 min (20%) remaining' button
            Mouse.DoubleClick(uIItem58min20remainingButton, New Point(11, 9))

            'Double-Click 'Currently connected to: chery Access:  Local and I...' button
            Mouse.DoubleClick(uICurrentlyconnectedtoButton, New Point(9, 9))

            'Double-Click 'Volume' button
            Mouse.DoubleClick(uIVolumeButton, New Point(9, 13))

            'Launch '%ProgramFiles%\Google\Chrome\Application\chrome.exe'
            Dim chromeApplication As ApplicationUnderTest = ApplicationUnderTest.Launch(Me.RecordedMethod1Params.ExePath, Me.RecordedMethod1Params.AlternateExePath)
        End Sub
        
        #Region "Properties"
        Public Overridable ReadOnly Property RecordedMethod1Params() As RecordedMethod1Params
            Get
                If (Me.mRecordedMethod1Params Is Nothing) Then
                    Me.mRecordedMethod1Params = New RecordedMethod1Params()
                End If
                Return Me.mRecordedMethod1Params
            End Get
        End Property
        
        Public ReadOnly Property UINotificationAreaWindow() As UINotificationAreaWindow
            Get
                If (Me.mUINotificationAreaWindow Is Nothing) Then
                    Me.mUINotificationAreaWindow = New UINotificationAreaWindow()
                End If
                Return Me.mUINotificationAreaWindow
            End Get
        End Property
        
        Public ReadOnly Property UISystemControlAreaWindow() As UISystemControlAreaWindow
            Get
                If (Me.mUISystemControlAreaWindow Is Nothing) Then
                    Me.mUISystemControlAreaWindow = New UISystemControlAreaWindow()
                End If
                Return Me.mUISystemControlAreaWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mRecordedMethod1Params As RecordedMethod1Params
        
        Private mUINotificationAreaWindow As UINotificationAreaWindow
        
        Private mUISystemControlAreaWindow As UISystemControlAreaWindow
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'RecordedMethod1'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class RecordedMethod1Params
        
        #Region "Fields"
        '''<summary>
        '''Launch '%ProgramFiles%\Google\Chrome\Application\chrome.exe'
        '''</summary>
        Public ExePath As String = "C:\Program Files\Google\Chrome\Application\chrome.exe"
        
        '''<summary>
        '''Launch '%ProgramFiles%\Google\Chrome\Application\chrome.exe'
        '''</summary>
        Public AlternateExePath As String = "%ProgramFiles%\Google\Chrome\Application\chrome.exe"
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UINotificationAreaWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Notification Area"
            Me.SearchProperties(WinWindow.PropertyNames.ClassName) = "ToolbarWindow32"
            Me.WindowTitles.Add("Notification Area")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UINotificationAreaToolBar() As UINotificationAreaToolBar
            Get
                If (Me.mUINotificationAreaToolBar Is Nothing) Then
                    Me.mUINotificationAreaToolBar = New UINotificationAreaToolBar(Me)
                End If
                Return Me.mUINotificationAreaToolBar
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUINotificationAreaToolBar As UINotificationAreaToolBar
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UINotificationAreaToolBar
        Inherits WinToolBar
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinToolBar.PropertyNames.Name) = "Notification Area"
            Me.WindowTitles.Add("Notification Area")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UINewupdatesareavailabButton() As WinButton
            Get
                If (Me.mUINewupdatesareavailabButton Is Nothing) Then
                    Me.mUINewupdatesareavailabButton = New WinButton(Me)
                    Me.mUINewupdatesareavailabButton.SearchProperties(WinButton.PropertyNames.Name) = "New updates are available"
                    Me.mUINewupdatesareavailabButton.WindowTitles.Add("Notification Area")
                End If
                Return Me.mUINewupdatesareavailabButton
            End Get
        End Property
        
        Public ReadOnly Property UITeamFoundationBuildNButton() As WinButton
            Get
                If (Me.mUITeamFoundationBuildNButton Is Nothing) Then
                    Me.mUITeamFoundationBuildNButton = New WinButton(Me)
                    Me.mUITeamFoundationBuildNButton.SearchProperties(WinButton.PropertyNames.Name) = "Team Foundation Build Notification"
                    Me.mUITeamFoundationBuildNButton.WindowTitles.Add("Notification Area")
                End If
                Return Me.mUITeamFoundationBuildNButton
            End Get
        End Property
        
        Public ReadOnly Property UIµTorrent31200downloaButton() As WinButton
            Get
                If (Me.mUIµTorrent31200downloaButton Is Nothing) Then
                    Me.mUIµTorrent31200downloaButton = New WinButton(Me)
                    Me.mUIµTorrent31200downloaButton.SearchProperties(WinButton.PropertyNames.Name) = "µTorrent 3.1.20(0) downloading, 0(0) seeding0.0 kB/s down, 0.0 kB/s up"
                    Me.mUIµTorrent31200downloaButton.WindowTitles.Add("Notification Area")
                End If
                Return Me.mUIµTorrent31200downloaButton
            End Get
        End Property
        
        Public ReadOnly Property UIComputerstatusProtecButton() As WinButton
            Get
                If (Me.mUIComputerstatusProtecButton Is Nothing) Then
                    Me.mUIComputerstatusProtecButton = New WinButton(Me)
                    Me.mUIComputerstatusProtecButton.SearchProperties(WinButton.PropertyNames.Name) = "Computer status - Protected"
                    Me.mUIComputerstatusProtecButton.WindowTitles.Add("Notification Area")
                End If
                Return Me.mUIComputerstatusProtecButton
            End Get
        End Property
        
        Public ReadOnly Property UIDellTouchpadButton() As WinButton
            Get
                If (Me.mUIDellTouchpadButton Is Nothing) Then
                    Me.mUIDellTouchpadButton = New WinButton(Me)
                    Me.mUIDellTouchpadButton.SearchProperties(WinButton.PropertyNames.Name) = "Dell Touchpad"
                    Me.mUIDellTouchpadButton.WindowTitles.Add("Notification Area")
                End If
                Return Me.mUIDellTouchpadButton
            End Get
        End Property
        
        Public ReadOnly Property UIMagicISOVirtualCDDVDButton() As WinButton
            Get
                If (Me.mUIMagicISOVirtualCDDVDButton Is Nothing) Then
                    Me.mUIMagicISOVirtualCDDVDButton = New WinButton(Me)
                    Me.mUIMagicISOVirtualCDDVDButton.SearchProperties(WinButton.PropertyNames.Name) = "MagicISO Virtual CD/DVD Manager"
                    Me.mUIMagicISOVirtualCDDVDButton.WindowTitles.Add("Notification Area")
                End If
                Return Me.mUIMagicISOVirtualCDDVDButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUINewupdatesareavailabButton As WinButton
        
        Private mUITeamFoundationBuildNButton As WinButton
        
        Private mUIµTorrent31200downloaButton As WinButton
        
        Private mUIComputerstatusProtecButton As WinButton
        
        Private mUIDellTouchpadButton As WinButton
        
        Private mUIMagicISOVirtualCDDVDButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UISystemControlAreaWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "System Control Area"
            Me.SearchProperties(WinWindow.PropertyNames.ClassName) = "ToolbarWindow32"
            Me.WindowTitles.Add("System Control Area")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UISystemControlAreaToolBar() As UISystemControlAreaToolBar
            Get
                If (Me.mUISystemControlAreaToolBar Is Nothing) Then
                    Me.mUISystemControlAreaToolBar = New UISystemControlAreaToolBar(Me)
                End If
                Return Me.mUISystemControlAreaToolBar
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUISystemControlAreaToolBar As UISystemControlAreaToolBar
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UISystemControlAreaToolBar
        Inherits WinToolBar
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinToolBar.PropertyNames.Name) = "System Control Area"
            Me.WindowTitles.Add("System Control Area")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItem58min20remainingButton() As WinButton
            Get
                If (Me.mUIItem58min20remainingButton Is Nothing) Then
                    Me.mUIItem58min20remainingButton = New WinButton(Me)
                    Me.mUIItem58min20remainingButton.SearchProperties(WinButton.PropertyNames.Name) = "58 min (20%) remaining"
                    Me.mUIItem58min20remainingButton.WindowTitles.Add("System Control Area")
                End If
                Return Me.mUIItem58min20remainingButton
            End Get
        End Property
        
        Public ReadOnly Property UICurrentlyconnectedtoButton() As WinButton
            Get
                If (Me.mUICurrentlyconnectedtoButton Is Nothing) Then
                    Me.mUICurrentlyconnectedtoButton = New WinButton(Me)
                    Me.mUICurrentlyconnectedtoButton.SearchProperties(WinButton.PropertyNames.Name) = "Currently connected to: chery Access:  Local and Internet"
                    Me.mUICurrentlyconnectedtoButton.WindowTitles.Add("System Control Area")
                End If
                Return Me.mUICurrentlyconnectedtoButton
            End Get
        End Property
        
        Public ReadOnly Property UIVolumeButton() As WinButton
            Get
                If (Me.mUIVolumeButton Is Nothing) Then
                    Me.mUIVolumeButton = New WinButton(Me)
                    Me.mUIVolumeButton.SearchProperties(WinButton.PropertyNames.Name) = "Volume"
                    Me.mUIVolumeButton.WindowTitles.Add("System Control Area")
                End If
                Return Me.mUIVolumeButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItem58min20remainingButton As WinButton
        
        Private mUICurrentlyconnectedtoButton As WinButton
        
        Private mUIVolumeButton As WinButton
        #End Region
    End Class
End Namespace
