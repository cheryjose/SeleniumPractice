'------------------------------------------------------------------------------
'  <auto-generated>
'      This code was generated by coded UI test builder.
'      Version: 10.0.0.0
'
'      Changes to this file may cause incorrect behavior and will be lost if
'      the code is regenerated.
'  </auto-generated>
' ------------------------------------------------------------------------------

Imports System
Imports System.CodeDom.Compiler
Imports System.Collections.Generic
Imports System.Drawing
Imports System.Text.RegularExpressions
Imports System.Windows.Input
Imports Microsoft.VisualStudio.TestTools.UITest.Extension
Imports Microsoft.VisualStudio.TestTools.UITesting
Imports Microsoft.VisualStudio.TestTools.UITesting.WinControls
Imports Microsoft.VisualStudio.TestTools.UnitTesting
Imports Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard
Imports Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse
Imports MouseButtons = System.Windows.Forms.MouseButtons

Namespace TestProject1
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Partial Public Class UIMap
        
        '''<summary>
        '''RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        '''</summary>
        Public Sub RecordedMethod1()
            Dim uIExitMenuItem As WinMenuItem = Me.UIFlightReservationWindow.UIApplicationMenuBar.UIFileMenuItem.UIExitMenuItem
            Dim uIItemEdit As WinEdit = Me.UILoginWindow.UIItemWindow.UIItemEdit
            Dim uIItemEdit1 As WinEdit = Me.UILoginWindow.UIItemWindow1.UIItemEdit
            Dim uIOKButton As WinButton = Me.UILoginWindow.UIOKWindow.UIOKButton
            Dim uIFlightScheduleGroup As WinGroup = Me.UIFlightReservationWindow.UIFlightScheduleWindow.UIFlightScheduleGroup
            Dim uIClassButton As WinButton = Me.UIFlightReservationWindow.UIItemWindow.UIClassButton
            Dim uICloseButton As WinButton = Me.UIReportNotepadWindow.UIReportNotepadTitleBar.UICloseButton
            Dim uIItemDialog As WinControl = Me.UIFlightReservationWindow.UIItemWindow1.UIItemDialog
            Dim uIClassButton1 As WinButton = Me.UIFlightReservationWindow.UIItemWindow2.UIClassButton
            Dim uICloseButton1 As WinButton = Me.UIFlightReservationHelWindow.UIFlightReservationHelTitleBar.UICloseButton
            Dim uIClassButton2 As WinButton = Me.UIFlightReservationWindow.UIItemWindow3.UIClassButton
            Dim uICancelButton As WinButton = Me.UIOpenOrderWindow.UICancelWindow.UICancelButton
            Dim uIClassButton3 As WinButton = Me.UIFlightReservationWindow.UIItemWindow4.UIClassButton
            Dim uICloseButton2 As WinButton = Me.UIGraphWindow.UIGraphTitleBar.UICloseButton
            Dim uICloseButton3 As WinButton = Me.UIµTorrentWindow.UIµTorrentTitleBar.UICloseButton
            Dim uIItemDocument As WinControl = Me.UISupportedConfiguratiWindow.UIItemWindow.UIItemDocument
            Dim uISupportedConfiguratiClient As WinClient = Me.UISupportedConfiguratiWindow.UISupportedConfiguratiClient

            'Click 'File' -> 'Exit' menu item
            Mouse.Click(uIExitMenuItem, New Point(26, 9))

            'Launch '%ProgramFiles%\Mercury Interactive\QuickTest Professional\samples\flight\app\flight4a.exe'
            Dim uILoginWindow As ApplicationUnderTest = ApplicationUnderTest.Launch(Me.RecordedMethod1Params.UILoginWindowExePath, Me.RecordedMethod1Params.UILoginWindowAlternateExePath)

            'Type 'admin' in 'Unknown Name' text box
            uIItemEdit.Text = Me.RecordedMethod1Params.UIItemEditText

            'Type '{Tab}' in 'Unknown Name' text box
            Keyboard.SendKeys(uIItemEdit, Me.RecordedMethod1Params.UIItemEditSendKeys, ModifierKeys.None)

            'Type '********' in 'Unknown Name' text box
            Keyboard.SendKeys(uIItemEdit1, Me.RecordedMethod1Params.UIItemEditSendKeys1, true)

            'Click 'OK' button
            Mouse.Click(uIOKButton, New Point(36, 17))

            'Click 'Flight Schedule:' group
            Mouse.Click(uIFlightScheduleGroup, New Point(439, 50))

            'Click 'Class:' button
            Mouse.Click(uIClassButton, New Point(13, 19))

            'Click 'Close' button
            Mouse.Click(uICloseButton, New Point(21, 5))

            'Click 'Unknown Name' Dialog
            Mouse.Click(uIItemDialog, New Point(187, 19))

            'Click 'Class:' button
            Mouse.Click(uIClassButton1, New Point(20, 17))

            'Click 'Close' button
            Mouse.Click(uICloseButton1, New Point(26, 4))

            'Click 'Class:' button
            Mouse.Click(uIClassButton2, New Point(11, 12))

            'Click 'Cancel' button
            Mouse.Click(uICancelButton, New Point(29, 11))

            'Click 'Class:' button
            Mouse.Click(uIClassButton3, New Point(9, 5))

            'Click 'Close' button
            Mouse.Click(uICloseButton2, New Point(25, 8))

            'Click 'File' -> 'Exit' menu item
            Mouse.Click(uIExitMenuItem, New Point(25, 7))

            'Click 'Close' button
            Mouse.Click(uICloseButton3, New Point(27, 8))

            'Click 'Unknown Name' document
            Mouse.Click(uIItemDocument, New Point(1150, 524))

            'Click 'Supported Configurations and Platforms for Coded U...' client
            Mouse.Click(uISupportedConfiguratiClient, New Point(1200, 4))
        End Sub
        
        #Region "Properties"
        Public Overridable ReadOnly Property RecordedMethod1Params() As RecordedMethod1Params
            Get
                If (Me.mRecordedMethod1Params Is Nothing) Then
                    Me.mRecordedMethod1Params = New RecordedMethod1Params()
                End If
                Return Me.mRecordedMethod1Params
            End Get
        End Property
        
        Public ReadOnly Property UIFlightReservationWindow() As UIFlightReservationWindow
            Get
                If (Me.mUIFlightReservationWindow Is Nothing) Then
                    Me.mUIFlightReservationWindow = New UIFlightReservationWindow()
                End If
                Return Me.mUIFlightReservationWindow
            End Get
        End Property
        
        Public ReadOnly Property UILoginWindow() As UILoginWindow
            Get
                If (Me.mUILoginWindow Is Nothing) Then
                    Me.mUILoginWindow = New UILoginWindow()
                End If
                Return Me.mUILoginWindow
            End Get
        End Property
        
        Public ReadOnly Property UIReportNotepadWindow() As UIReportNotepadWindow
            Get
                If (Me.mUIReportNotepadWindow Is Nothing) Then
                    Me.mUIReportNotepadWindow = New UIReportNotepadWindow()
                End If
                Return Me.mUIReportNotepadWindow
            End Get
        End Property
        
        Public ReadOnly Property UIFlightReservationHelWindow() As UIFlightReservationHelWindow
            Get
                If (Me.mUIFlightReservationHelWindow Is Nothing) Then
                    Me.mUIFlightReservationHelWindow = New UIFlightReservationHelWindow()
                End If
                Return Me.mUIFlightReservationHelWindow
            End Get
        End Property
        
        Public ReadOnly Property UIOpenOrderWindow() As UIOpenOrderWindow
            Get
                If (Me.mUIOpenOrderWindow Is Nothing) Then
                    Me.mUIOpenOrderWindow = New UIOpenOrderWindow()
                End If
                Return Me.mUIOpenOrderWindow
            End Get
        End Property
        
        Public ReadOnly Property UIGraphWindow() As UIGraphWindow
            Get
                If (Me.mUIGraphWindow Is Nothing) Then
                    Me.mUIGraphWindow = New UIGraphWindow()
                End If
                Return Me.mUIGraphWindow
            End Get
        End Property
        
        Public ReadOnly Property UIµTorrentWindow() As UIµTorrentWindow
            Get
                If (Me.mUIµTorrentWindow Is Nothing) Then
                    Me.mUIµTorrentWindow = New UIµTorrentWindow()
                End If
                Return Me.mUIµTorrentWindow
            End Get
        End Property
        
        Public ReadOnly Property UISupportedConfiguratiWindow() As UISupportedConfiguratiWindow
            Get
                If (Me.mUISupportedConfiguratiWindow Is Nothing) Then
                    Me.mUISupportedConfiguratiWindow = New UISupportedConfiguratiWindow()
                End If
                Return Me.mUISupportedConfiguratiWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mRecordedMethod1Params As RecordedMethod1Params
        
        Private mUIFlightReservationWindow As UIFlightReservationWindow
        
        Private mUILoginWindow As UILoginWindow
        
        Private mUIReportNotepadWindow As UIReportNotepadWindow
        
        Private mUIFlightReservationHelWindow As UIFlightReservationHelWindow
        
        Private mUIOpenOrderWindow As UIOpenOrderWindow
        
        Private mUIGraphWindow As UIGraphWindow
        
        Private mUIµTorrentWindow As UIµTorrentWindow
        
        Private mUISupportedConfiguratiWindow As UISupportedConfiguratiWindow
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'RecordedMethod1'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class RecordedMethod1Params
        
        #Region "Fields"
        '''<summary>
        '''Launch '%ProgramFiles%\Mercury Interactive\QuickTest Professional\samples\flight\app\flight4a.exe'
        '''</summary>
        Public UILoginWindowExePath As String = "C:\Program Files\Mercury Interactive\QuickTest Professional\samples\flight\app\fl"& _ 
            "ight4a.exe"
        
        '''<summary>
        '''Launch '%ProgramFiles%\Mercury Interactive\QuickTest Professional\samples\flight\app\flight4a.exe'
        '''</summary>
        Public UILoginWindowAlternateExePath As String = "%ProgramFiles%\Mercury Interactive\QuickTest Professional\samples\flight\app\flig"& _ 
            "ht4a.exe"
        
        '''<summary>
        '''Type 'admin' in 'Unknown Name' text box
        '''</summary>
        Public UIItemEditText As String = "admin"
        
        '''<summary>
        '''Type '{Tab}' in 'Unknown Name' text box
        '''</summary>
        Public UIItemEditSendKeys As String = "{Tab}"
        
        '''<summary>
        '''Type '********' in 'Unknown Name' text box
        '''</summary>
        Public UIItemEditSendKeys1 As String = "21jPE5iiOhCvzrZTjF3Agu0dW5DhZ1qx"
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIFlightReservationWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Flight Reservation"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "Afx:", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("Flight Reservation")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIApplicationMenuBar() As UIApplicationMenuBar
            Get
                If (Me.mUIApplicationMenuBar Is Nothing) Then
                    Me.mUIApplicationMenuBar = New UIApplicationMenuBar(Me)
                End If
                Return Me.mUIApplicationMenuBar
            End Get
        End Property
        
        Public ReadOnly Property UIFlightScheduleWindow() As UIFlightScheduleWindow
            Get
                If (Me.mUIFlightScheduleWindow Is Nothing) Then
                    Me.mUIFlightScheduleWindow = New UIFlightScheduleWindow(Me)
                End If
                Return Me.mUIFlightScheduleWindow
            End Get
        End Property
        
        Public ReadOnly Property UIItemWindow() As UIItemWindow
            Get
                If (Me.mUIItemWindow Is Nothing) Then
                    Me.mUIItemWindow = New UIItemWindow(Me)
                End If
                Return Me.mUIItemWindow
            End Get
        End Property
        
        Public ReadOnly Property UIItemWindow1() As UIItemWindow1
            Get
                If (Me.mUIItemWindow1 Is Nothing) Then
                    Me.mUIItemWindow1 = New UIItemWindow1(Me)
                End If
                Return Me.mUIItemWindow1
            End Get
        End Property
        
        Public ReadOnly Property UIItemWindow2() As UIItemWindow2
            Get
                If (Me.mUIItemWindow2 Is Nothing) Then
                    Me.mUIItemWindow2 = New UIItemWindow2(Me)
                End If
                Return Me.mUIItemWindow2
            End Get
        End Property
        
        Public ReadOnly Property UIItemWindow3() As UIItemWindow3
            Get
                If (Me.mUIItemWindow3 Is Nothing) Then
                    Me.mUIItemWindow3 = New UIItemWindow3(Me)
                End If
                Return Me.mUIItemWindow3
            End Get
        End Property
        
        Public ReadOnly Property UIItemWindow4() As UIItemWindow4
            Get
                If (Me.mUIItemWindow4 Is Nothing) Then
                    Me.mUIItemWindow4 = New UIItemWindow4(Me)
                End If
                Return Me.mUIItemWindow4
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIApplicationMenuBar As UIApplicationMenuBar
        
        Private mUIFlightScheduleWindow As UIFlightScheduleWindow
        
        Private mUIItemWindow As UIItemWindow
        
        Private mUIItemWindow1 As UIItemWindow1
        
        Private mUIItemWindow2 As UIItemWindow2
        
        Private mUIItemWindow3 As UIItemWindow3
        
        Private mUIItemWindow4 As UIItemWindow4
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIApplicationMenuBar
        Inherits WinMenuBar
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinMenu.PropertyNames.Name) = "Application"
            Me.WindowTitles.Add("Flight Reservation")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIFileMenuItem() As UIFileMenuItem
            Get
                If (Me.mUIFileMenuItem Is Nothing) Then
                    Me.mUIFileMenuItem = New UIFileMenuItem(Me)
                End If
                Return Me.mUIFileMenuItem
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIFileMenuItem As UIFileMenuItem
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIFileMenuItem
        Inherits WinMenuItem
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinMenuItem.PropertyNames.Name) = "File"
            Me.WindowTitles.Add("Flight Reservation")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIExitMenuItem() As WinMenuItem
            Get
                If (Me.mUIExitMenuItem Is Nothing) Then
                    Me.mUIExitMenuItem = New WinMenuItem(Me)
                    Me.mUIExitMenuItem.SearchProperties(WinMenuItem.PropertyNames.Name) = "Exit"
                    Me.mUIExitMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching)
                    Me.mUIExitMenuItem.WindowTitles.Add("Flight Reservation")
                End If
                Return Me.mUIExitMenuItem
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIExitMenuItem As WinMenuItem
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIFlightScheduleWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlId) = "65535"
            Me.WindowTitles.Add("Flight Reservation")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIFlightScheduleGroup() As WinGroup
            Get
                If (Me.mUIFlightScheduleGroup Is Nothing) Then
                    Me.mUIFlightScheduleGroup = New WinGroup(Me)
                    Me.mUIFlightScheduleGroup.SearchProperties(WinControl.PropertyNames.Name) = "Flight Schedule:"
                    Me.mUIFlightScheduleGroup.WindowTitles.Add("Flight Reservation")
                End If
                Return Me.mUIFlightScheduleGroup
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIFlightScheduleGroup As WinGroup
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIItemWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlId) = "1"
            Me.WindowTitles.Add("Flight Reservation")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIClassButton() As WinButton
            Get
                If (Me.mUIClassButton Is Nothing) Then
                    Me.mUIClassButton = New WinButton(Me)
                    Me.mUIClassButton.SearchProperties(WinButton.PropertyNames.Name) = "Class:"
                    Me.mUIClassButton.WindowTitles.Add("Flight Reservation")
                End If
                Return Me.mUIClassButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIClassButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIItemWindow1
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlId) = "59648"
            Me.WindowTitles.Add("Flight Reservation")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItemDialog() As WinControl
            Get
                If (Me.mUIItemDialog Is Nothing) Then
                    Me.mUIItemDialog = New WinControl(Me)
                    Me.mUIItemDialog.SearchProperties(UITestControl.PropertyNames.ControlType) = "Dialog"
                    Me.mUIItemDialog.WindowTitles.Add("Flight Reservation")
                End If
                Return Me.mUIItemDialog
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItemDialog As WinControl
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIItemWindow2
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlId) = "7"
            Me.WindowTitles.Add("Flight Reservation")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIClassButton() As WinButton
            Get
                If (Me.mUIClassButton Is Nothing) Then
                    Me.mUIClassButton = New WinButton(Me)
                    Me.mUIClassButton.SearchProperties(WinButton.PropertyNames.Name) = "Class:"
                    Me.mUIClassButton.WindowTitles.Add("Flight Reservation")
                End If
                Return Me.mUIClassButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIClassButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIItemWindow3
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlId) = "5"
            Me.WindowTitles.Add("Flight Reservation")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIClassButton() As WinButton
            Get
                If (Me.mUIClassButton Is Nothing) Then
                    Me.mUIClassButton = New WinButton(Me)
                    Me.mUIClassButton.SearchProperties(WinButton.PropertyNames.Name) = "Class:"
                    Me.mUIClassButton.WindowTitles.Add("Flight Reservation")
                End If
                Return Me.mUIClassButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIClassButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIItemWindow4
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlId) = "2"
            Me.WindowTitles.Add("Flight Reservation")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIClassButton() As WinButton
            Get
                If (Me.mUIClassButton Is Nothing) Then
                    Me.mUIClassButton = New WinButton(Me)
                    Me.mUIClassButton.SearchProperties(WinButton.PropertyNames.Name) = "Class:"
                    Me.mUIClassButton.WindowTitles.Add("Flight Reservation")
                End If
                Return Me.mUIClassButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIClassButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UILoginWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Login"
            Me.SearchProperties(WinWindow.PropertyNames.ClassName) = "#32770"
            Me.WindowTitles.Add("Login")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItemWindow() As UIItemWindow5
            Get
                If (Me.mUIItemWindow Is Nothing) Then
                    Me.mUIItemWindow = New UIItemWindow5(Me)
                End If
                Return Me.mUIItemWindow
            End Get
        End Property
        
        Public ReadOnly Property UIItemWindow1() As UIItemWindow11
            Get
                If (Me.mUIItemWindow1 Is Nothing) Then
                    Me.mUIItemWindow1 = New UIItemWindow11(Me)
                End If
                Return Me.mUIItemWindow1
            End Get
        End Property
        
        Public ReadOnly Property UIOKWindow() As UIOKWindow
            Get
                If (Me.mUIOKWindow Is Nothing) Then
                    Me.mUIOKWindow = New UIOKWindow(Me)
                End If
                Return Me.mUIOKWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItemWindow As UIItemWindow5
        
        Private mUIItemWindow1 As UIItemWindow11
        
        Private mUIOKWindow As UIOKWindow
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIItemWindow5
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlId) = "3001"
            Me.WindowTitles.Add("Login")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItemEdit() As WinEdit
            Get
                If (Me.mUIItemEdit Is Nothing) Then
                    Me.mUIItemEdit = New WinEdit(Me)
                    Me.mUIItemEdit.WindowTitles.Add("Login")
                End If
                Return Me.mUIItemEdit
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItemEdit As WinEdit
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIItemWindow11
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlId) = "2000"
            Me.WindowTitles.Add("Login")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItemEdit() As WinEdit
            Get
                If (Me.mUIItemEdit Is Nothing) Then
                    Me.mUIItemEdit = New WinEdit(Me)
                    Me.mUIItemEdit.WindowTitles.Add("Login")
                End If
                Return Me.mUIItemEdit
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItemEdit As WinEdit
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIOKWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlId) = "1"
            Me.WindowTitles.Add("Login")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIOKButton() As WinButton
            Get
                If (Me.mUIOKButton Is Nothing) Then
                    Me.mUIOKButton = New WinButton(Me)
                    Me.mUIOKButton.SearchProperties(WinButton.PropertyNames.Name) = "OK"
                    Me.mUIOKButton.WindowTitles.Add("Login")
                End If
                Return Me.mUIOKButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIOKButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIReportNotepadWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "report - Notepad"
            Me.SearchProperties(WinWindow.PropertyNames.ClassName) = "Notepad"
            Me.WindowTitles.Add("report - Notepad")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIReportNotepadTitleBar() As UIReportNotepadTitleBar
            Get
                If (Me.mUIReportNotepadTitleBar Is Nothing) Then
                    Me.mUIReportNotepadTitleBar = New UIReportNotepadTitleBar(Me)
                End If
                Return Me.mUIReportNotepadTitleBar
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIReportNotepadTitleBar As UIReportNotepadTitleBar
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIReportNotepadTitleBar
        Inherits WinTitleBar
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.WindowTitles.Add("report - Notepad")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UICloseButton() As WinButton
            Get
                If (Me.mUICloseButton Is Nothing) Then
                    Me.mUICloseButton = New WinButton(Me)
                    Me.mUICloseButton.SearchProperties(WinButton.PropertyNames.Name) = "Close"
                    Me.mUICloseButton.WindowTitles.Add("report - Notepad")
                End If
                Return Me.mUICloseButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUICloseButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIFlightReservationHelWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Flight Reservation Help Version 1.0"
            Me.SearchProperties(WinWindow.PropertyNames.ClassName) = "MS_WINDOC"
            Me.WindowTitles.Add("Flight Reservation Help Version 1.0")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIFlightReservationHelTitleBar() As UIFlightReservationHelTitleBar
            Get
                If (Me.mUIFlightReservationHelTitleBar Is Nothing) Then
                    Me.mUIFlightReservationHelTitleBar = New UIFlightReservationHelTitleBar(Me)
                End If
                Return Me.mUIFlightReservationHelTitleBar
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIFlightReservationHelTitleBar As UIFlightReservationHelTitleBar
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIFlightReservationHelTitleBar
        Inherits WinTitleBar
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.WindowTitles.Add("Flight Reservation Help Version 1.0")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UICloseButton() As WinButton
            Get
                If (Me.mUICloseButton Is Nothing) Then
                    Me.mUICloseButton = New WinButton(Me)
                    Me.mUICloseButton.SearchProperties(WinButton.PropertyNames.Name) = "Close"
                    Me.mUICloseButton.WindowTitles.Add("Flight Reservation Help Version 1.0")
                End If
                Return Me.mUICloseButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUICloseButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIOpenOrderWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Open Order"
            Me.SearchProperties(WinWindow.PropertyNames.ClassName) = "#32770"
            Me.WindowTitles.Add("Open Order")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UICancelWindow() As UICancelWindow
            Get
                If (Me.mUICancelWindow Is Nothing) Then
                    Me.mUICancelWindow = New UICancelWindow(Me)
                End If
                Return Me.mUICancelWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUICancelWindow As UICancelWindow
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UICancelWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlId) = "2"
            Me.WindowTitles.Add("Open Order")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UICancelButton() As WinButton
            Get
                If (Me.mUICancelButton Is Nothing) Then
                    Me.mUICancelButton = New WinButton(Me)
                    Me.mUICancelButton.SearchProperties(WinButton.PropertyNames.Name) = "Cancel"
                    Me.mUICancelButton.WindowTitles.Add("Open Order")
                End If
                Return Me.mUICancelButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUICancelButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIGraphWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Graph"
            Me.SearchProperties(WinWindow.PropertyNames.ClassName) = "#32770"
            Me.WindowTitles.Add("Graph")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIGraphTitleBar() As UIGraphTitleBar
            Get
                If (Me.mUIGraphTitleBar Is Nothing) Then
                    Me.mUIGraphTitleBar = New UIGraphTitleBar(Me)
                End If
                Return Me.mUIGraphTitleBar
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIGraphTitleBar As UIGraphTitleBar
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIGraphTitleBar
        Inherits WinTitleBar
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.WindowTitles.Add("Graph")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UICloseButton() As WinButton
            Get
                If (Me.mUICloseButton Is Nothing) Then
                    Me.mUICloseButton = New WinButton(Me)
                    Me.mUICloseButton.SearchProperties(WinButton.PropertyNames.Name) = "Close"
                    Me.mUICloseButton.WindowTitles.Add("Graph")
                End If
                Return Me.mUICloseButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUICloseButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIµTorrentWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "µTorrent"
            Me.SearchProperties(WinWindow.PropertyNames.ClassName) = "#32770"
            Me.WindowTitles.Add("µTorrent")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIµTorrentTitleBar() As UIµTorrentTitleBar
            Get
                If (Me.mUIµTorrentTitleBar Is Nothing) Then
                    Me.mUIµTorrentTitleBar = New UIµTorrentTitleBar(Me)
                End If
                Return Me.mUIµTorrentTitleBar
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIµTorrentTitleBar As UIµTorrentTitleBar
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIµTorrentTitleBar
        Inherits WinTitleBar
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.WindowTitles.Add("µTorrent")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UICloseButton() As WinButton
            Get
                If (Me.mUICloseButton Is Nothing) Then
                    Me.mUICloseButton = New WinButton(Me)
                    Me.mUICloseButton.SearchProperties(WinButton.PropertyNames.Name) = "Close"
                    Me.mUICloseButton.WindowTitles.Add("µTorrent")
                End If
                Return Me.mUICloseButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUICloseButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UISupportedConfiguratiWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Supported Configurations and Platforms for Coded UI Tests and Action Recordings -"& _ 
                " Google Chrome"
            Me.SearchProperties(WinWindow.PropertyNames.ClassName) = "Chrome_WidgetWin_0"
            Me.WindowTitles.Add("Supported Configurations and Platforms for Coded UI Tests and Action Recordings -"& _ 
                    " Google Chrome")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItemWindow() As UIItemWindow6
            Get
                If (Me.mUIItemWindow Is Nothing) Then
                    Me.mUIItemWindow = New UIItemWindow6(Me)
                End If
                Return Me.mUIItemWindow
            End Get
        End Property
        
        Public ReadOnly Property UISupportedConfiguratiClient() As WinClient
            Get
                If (Me.mUISupportedConfiguratiClient Is Nothing) Then
                    Me.mUISupportedConfiguratiClient = New WinClient(Me)
                    Me.mUISupportedConfiguratiClient.SearchProperties(WinControl.PropertyNames.Name) = "Google Chrome"
                    Me.mUISupportedConfiguratiClient.WindowTitles.Add("Supported Configurations and Platforms for Coded UI Tests and Action Recordings -"& _ 
                            " Google Chrome")
                End If
                Return Me.mUISupportedConfiguratiClient
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItemWindow As UIItemWindow6
        
        Private mUISupportedConfiguratiClient As WinClient
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "10.0.30319.1")>  _
    Public Class UIItemWindow6
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlId) = "84193280"
            Me.WindowTitles.Add("Supported Configurations and Platforms for Coded UI Tests and Action Recordings -"& _ 
                    " Google Chrome")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItemDocument() As WinControl
            Get
                If (Me.mUIItemDocument Is Nothing) Then
                    Me.mUIItemDocument = New WinControl(Me)
                    Me.mUIItemDocument.SearchProperties(UITestControl.PropertyNames.ControlType) = "Document"
                    Me.mUIItemDocument.WindowTitles.Add("Supported Configurations and Platforms for Coded UI Tests and Action Recordings -"& _ 
                            " Google Chrome")
                End If
                Return Me.mUIItemDocument
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItemDocument As WinControl
        #End Region
    End Class
End Namespace
